
builtin:
    <identifier> = any alphanumeric token
    <concept-identifier> = identifier that is a defined concept
    <type-identifier> = identifier that is a defined type

// functions

<function-arguments> = <function-argument> | <function-argument> ',' <function-arguments>
<function-argument> = <type> { ',' <type> }
<template> = '<' { <identifier> ',' } '>'

<type-identifier> = [ <identifier> ] <identifier>

<function-declaration> = 'fn' <identifier> [ <template> ] '::' '(' [ <function-arguments> ] ')' [ '->' <identifier> ] ';'

<imperative-function-body> = 

<imperative-function-arguments> = <imperative-function-argument> | <imperative-function-argument> ',' <imperative-function-arguments>
<imperative-function-argument> = <identifier> <identifier>
<imperative-function-definition> = 'fn' <identifier> [ <template> ] '(' [ <function-arguments> ] ')' '{' { <imperative-function-body> '}'

<functional-function-definition> = 'fn' <identifier> 

// put it all together

<a++> = { <top-level-statement> }

<top-level-statement> = <struct-definition> | <function-declaration> | <imperative-function-definition> |  <functional-function-definition>

